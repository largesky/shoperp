<Application x:Class="ShopErp.App.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:ShopErp.App.Converters"
             DispatcherUnhandledException="Application_DispatcherUnhandledException" Exit="Application_Exit"
             ShutdownMode="OnExplicitShutdown"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <converters:BoolConverter x:Key="boolConverter" />
            <converters:EnumConverter x:Key="descriptionConverter" />
            <converters:WebUrlImageConverter x:Key="webUrlImageConverter" />
            <converters:VendorConverter x:Key="vendorConverter" />
            <converters:IntConverter x:Key="intConverter" />
            <converters:DateTimeConverter x:Key="datetimeConverter" />
            <converters:OrderReceiverInfoConverter x:Key="orderReceiverInfoConver" />
            <converters:ShopMarkConverter x:Key="shopMarkConverter" />
            <converters:ColorFlagImageConverter x:Key="flagImageConverter" />
            <converters:OrderPayTypeVisibilityConverter x:Key="OrderPayTypeVisibilityConverter" />
            <converters:VendorNameFormatConverter x:Key="VendorNameFormatConverter" />
            <converters:OrderGoodsStateConverter x:Key="OrderGoodsStateConverter"/>
            <converters:VideoTypeConverter x:Key="VideoTypeConverter"/>
            <converters:WuliuTemplateConverter x:Key="WuliuTemplateConverter"/>
            <converters:PopImageConverter x:Key="PopImageConverter"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <Style x:Key="ImageButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid x:Name="GroupBoxRoot">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                </Border>
                                <Border Grid.Row="1"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,0,1,1">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Cursor="{TemplateBinding Cursor}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SelectableTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="TextButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock>
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="Blue" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="OrderDataGridStyle" TargetType="{x:Type DataGrid}">
                <Setter Property="AutoGenerateColumns" Value="false" />
                <Setter Property="CanUserAddRows" Value="false" />
                <Setter Property="CanUserDeleteRows" Value="false" />
                <Setter Property="CanUserReorderColumns" Value="false" />
                <Setter Property="CanUserResizeRows" Value="True" />
                <Setter Property="SelectionMode" Value="Extended" />
                <Setter Property="SelectionUnit" Value="CellOrRowHeader" />
                <Setter Property="Margin" Value="3"/>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="{Binding Background}" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsReadOnly" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="IsEditing" Value="True" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>